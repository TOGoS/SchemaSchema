At a low level, the syntax can be described like this:

	word = single-quoted-string | double-quoted-string | bareword
	
	phrase = word { word }
	
	argument-list = parameterized { "," parameterized }
	
	parameterized-subject = phrase
	
	parameterized = parameterized-subject [ "(" argument-list ")" ]
	
	command-block = "=" command | "{" block "}"
	
	modifier-list = { ":" parameterized }
	
	command-subject = parameterized
	
	command = command-subject modifier-list command-block
	
	command-delimiter = ";" | "\n"
	
	block = command { command-delimiter command }

Class definitions are then built on top of commands.  A class definition
is indicated by a command where the subject's phrase starts with the word 'class'.
That command's modifiers indicate things about the class itself, and sub-commands
in that command's block define instance fields.  e.g.

	class patient hospitalization : self-keyed {
		patient ID : integer
		patient admission date : date
	}
